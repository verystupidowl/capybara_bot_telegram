package ru.tggc.capibaraBotTelegram.keyboard;

import com.pengrad.telegrambot.model.request.InlineKeyboardButton;
import com.pengrad.telegrambot.model.request.InlineKeyboardMarkup;
import ru.tggc.capibaraBotTelegram.capybara.Capybara;

import java.util.ArrayList;
import java.util.List;

public class InlineKeyboardCreator {

    public InlineKeyboardMarkup myCapybaraKeyboard(Capybara capybara, int date) {
        List<List<InlineKeyboardButton>> rows = new ArrayList<>();
        List<InlineKeyboardButton> change = new ArrayList<>();
        InlineKeyboardButton setName = new InlineKeyboardButton("–ò–∑–º–µ–Ω–∏—Ç—å –∏–º—è").callbackData("set_name");
        change.add(setName);
        InlineKeyboardButton setPhoto = new InlineKeyboardButton("–ò–∑–º–µ–Ω–∏—Ç—å —Ñ–æ—Ç–æ").callbackData("set_photo");
        change.add(setPhoto);

        rows.add(change);
        List<InlineKeyboardButton> feedHappy = null;

        if (capybara.getSatiety().getTimeRemaining() <= date) {
            InlineKeyboardButton feedCapybara = new InlineKeyboardButton("–ü–æ–∫–æ—Ä–º–∏—Ç—å/–û—Ç–∫–æ—Ä–º–∏—Ç—å").callbackData("feed_fatten");
            feedHappy = new ArrayList<>();
            feedHappy.add(feedCapybara);
        }

        if (capybara.getHappiness().getTimeRemaining() <= date) {
            InlineKeyboardButton makeHappy = new InlineKeyboardButton("–û—Å—á–∞—Å—Ç–ª–∏–≤–∏—Ç—å –∫–∞–ø–∏–±–∞—Ä—É").callbackData("make_happy");
            if (feedHappy == null)
                feedHappy = new ArrayList<>();
            feedHappy.add(makeHappy);
        }

        if (feedHappy != null) {
            rows.add(feedHappy);
        }

        List<InlineKeyboardButton> bigJobs = null;

        if (capybara.hasWork() && capybara.getCapybaraBigJob().getNextJob() <= date
                && capybara.getCapybaraPreparation().getPrepared() == 1 && capybara.getCapybaraBigJob().getLevel() == 0) {
            InlineKeyboardButton bigJob = new InlineKeyboardButton("–ë–æ–ª—å—à–æ–µ –¥–µ–ª–æ").callbackData("big_job");
            bigJobs = new ArrayList<>();
            bigJobs.add(bigJob);
        } else if (capybara.hasWork() && capybara.getCapybaraPreparation().getPrepared() == 0 && capybara.getCapybaraPreparation().getOnJob() == 0
                && capybara.getCapybaraBigJob().getNextJob() <= date && capybara.getLevel() >= 20
                && capybara.getJob().getJobTimer().getLevel() != 1) {
            InlineKeyboardButton bigJob = new InlineKeyboardButton("–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ –±–æ–ª—å—à–æ–º—É –¥–µ–ª—É").callbackData("big_job_preparation");
            bigJobs = new ArrayList<>();
            bigJobs.add(bigJob);
        } else if (capybara.hasWork() && capybara.getCapybaraBigJob().getTimeRemaining() <= date
                && capybara.getCapybaraPreparation().getPrepared() == 1 && capybara.getCapybaraBigJob().getLevel() == 1) {
            InlineKeyboardButton bigJob = new InlineKeyboardButton("–ó–∞–≤–µ—Ä—à–∏—Ç—å –±–æ–ª—å—à–æ–µ –¥–µ–ª–æ").callbackData("end_big_job");
            bigJobs = new ArrayList<>();
            bigJobs.add(bigJob);
        }


        if (bigJobs != null) {
            rows.add(bigJobs);
        }
        List<InlineKeyboardButton> jobs = null;

        if (capybara.hasWork()) {
            if (capybara.getJob().getJobTimer().getTimeRemaining() <= date && capybara.getJob().getJobTimer().getLevel() == 1) {
                InlineKeyboardButton job = new InlineKeyboardButton("–ó–∞–±—Ä–∞—Ç—å —Å —Ä–∞–±–æ—Ç—ã").callbackData("take_from_job");
                jobs = new ArrayList<>();
                jobs.add(job);
            }
        } else {
            InlineKeyboardButton getJob = new InlineKeyboardButton("–£—Å—Ç—Ä–æ–∏—Ç—å—Å—è –Ω–∞ —Ä–∞–±–æ—Ç—É").callbackData("get_job");
            jobs = new ArrayList<>();
            jobs.add(getJob);
        }

        if (jobs != null) {
            rows.add(jobs);
        }

        List<InlineKeyboardButton> infoBtn = new ArrayList<>();

        InlineKeyboardButton info = new InlineKeyboardButton("–ò–Ω—Ñ–æ").callbackData("info");
        infoBtn.add(info);

        rows.add(infoBtn);

        return new InlineKeyboardMarkup(rows.stream().map(row -> row.toArray(InlineKeyboardButton[]::new)).toArray(InlineKeyboardButton[][]::new));
    }

    public InlineKeyboardMarkup infoKeyboard(Capybara capybara, int date) {
        List<List<InlineKeyboardButton>> rows = new ArrayList<>();

        List<InlineKeyboardButton> mainRow = new ArrayList<>();
        List<InlineKeyboardButton> tea;
        List<InlineKeyboardButton> job;
        List<InlineKeyboardButton> improve;

        InlineKeyboardButton main = new InlineKeyboardButton("–ú–æ—è –∫–∞–ø–∏–±–∞—Ä–∞").callbackData("go_to_main");
        mainRow.add(main);
        rows.add(mainRow);

        if (capybara.getTea().getTimeRemaining() <= date && capybara.getTea().getLevel() == 0) {
            InlineKeyboardButton teaBtn = new InlineKeyboardButton("–ü–æ–π—Ç–∏ –Ω–∞ —á–∞–µ–ø–∏—Ç–∏–µ").callbackData("go_tea");
            tea = new ArrayList<>();
            tea.add(teaBtn);
            rows.add(tea);
        }

        if (capybara.hasWork() && capybara.getJob().getJobTimer().getNextJob() <= date
                && capybara.getJob().getJobTimer().getLevel() == 0 && capybara.getCapybaraBigJob().getLevel() != 1) {
            InlineKeyboardButton jobBtn = new InlineKeyboardButton("–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∫–∞–ø–∏–±–∞—Ä—É –Ω–∞ —Ä–∞–±–æ—Ç—É").callbackData("go_job");
            job = new ArrayList<>();
            job.add(jobBtn);
            rows.add(job);
        }

        if (capybara.getImprovement().getLevel() == 0) {
            InlineKeyboardButton improvementBtn = new InlineKeyboardButton("–ö—É–ø–∏—Ç—å —É–ª—É—á—à–µ–Ω–∏–µ –¥–ª—è –≥–æ–Ω–æ–∫").callbackData("buy_improve");
            improve = new ArrayList<>();
            improve.add(improvementBtn);
            rows.add(improve);
        }

        InlineKeyboardButton[][] newRows = rows.stream().map(row -> row.toArray(InlineKeyboardButton[]::new)).toArray(InlineKeyboardButton[][]::new);

        return new InlineKeyboardMarkup(newRows);
    }

    public InlineKeyboardMarkup improvements() {
        return new InlineKeyboardMarkup(new InlineKeyboardButton[][]{
                {new InlineKeyboardButton("–£–¥–æ–±–Ω—ã–µ –±–æ—Ç–∏–Ω–æ—á–∫–∏").callbackData("improve_boots")},
                {new InlineKeyboardButton("–í–∫—É—Å–Ω—ã–π –∞—Ä–±—É–∑").callbackData("improve_watermelon")},
                {new InlineKeyboardButton("–ê–Ω—Ç–∏–ø—Ä–æ–∏–≥—Ä—ã—à").callbackData("improve_pill")}
        });
    }

    public InlineKeyboardMarkup teaKeyboard() {
        return new InlineKeyboardMarkup(
                new InlineKeyboardButton("–ó–∞–±—Ä–∞—Ç—å –∫–∞–ø–∏–±–∞—Ä—É —Å —á–∞–µ–ø–∏—Ç–∏—è").callbackData("take_from_tea")
        );
    }

    public InlineKeyboardMarkup deleteCapybaraKeyboard() {
        return new InlineKeyboardMarkup(
                new InlineKeyboardButton("–¢–æ—á–Ω–æ –≤—ã–∫–∏–Ω—É—Ç—å –∫–∞–ø–∏–±–∞—Ä—É").callbackData("exactly_delete")
        );
    }

    public InlineKeyboardMarkup weddingKeyboard() {
        return new InlineKeyboardMarkup(new InlineKeyboardButton[][]{
                {new InlineKeyboardButton("–ü—Ä–∏–Ω—è—Ç—å –±—Ä–∞–∫").callbackData("accept_wedding")},
                {new InlineKeyboardButton("–û—Ç–∫–∞–∑–∞—Ç—å—Å—è").callbackData("refuse_wedding")}
        });
    }

    public InlineKeyboardMarkup unWeddingKeyboard() {
        return new InlineKeyboardMarkup(new InlineKeyboardButton[][]{
                {new InlineKeyboardButton("–ó–∞–±—Ä–∞—Ç—å —Å–≤–æ–∏ —Å–ª–æ–≤–∞ –Ω–∞–∑–∞–¥").callbackData("refuse_wedding")},
                {new InlineKeyboardButton("–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —Ä–∞—Å—Ç–æ—Ä–∂–µ–Ω–∏–µ").callbackData("un_wedding")},
        });
    }

    public InlineKeyboardMarkup raceKeyboard() {
        return new InlineKeyboardMarkup(new InlineKeyboardButton[][]{
                {new InlineKeyboardButton("–ü—Ä–∏–Ω—è—Ç—å –∑–∞–±–µ–≥").callbackData("accept_race")},
                {new InlineKeyboardButton("–û—Ç–∫–∞–∑–∞—Ç—å—Å—è –æ—Ç –∑–∞–±–µ–≥–∞").callbackData("refuse_race")}
        });
    }

    public InlineKeyboardMarkup raceMassage() {
        return new InlineKeyboardMarkup(
                new InlineKeyboardButton("–°–¥–µ–ª–∞—Ç—å –º–∞—Å—Å–∞–∂").callbackData("do_massage")
        );
    }

    public InlineKeyboardMarkup notChange() {
        return new InlineKeyboardMarkup(
                new InlineKeyboardButton("–ù–µ –º–µ–Ω—è—Ç—å –Ω–∏—á–µ–≥–æ").callbackData("not_change")
        );
    }

    public InlineKeyboardMarkup defaultPhoto() {
        return new InlineKeyboardMarkup(new InlineKeyboardButton[][]{
                {new InlineKeyboardButton("–ù–µ –º–µ–Ω—è—Ç—å –Ω–∏—á–µ–≥–æ").callbackData("not_change")},
                {new InlineKeyboardButton("–í—ã–±—Ä–∞—Ç—å —Å–ª—É—á–∞–π–Ω–æ–µ —Ñ–æ—Ç–æ").callbackData("set_default_photo")}
        });
    }

    public InlineKeyboardMarkup newJob() {
        return new InlineKeyboardMarkup(new InlineKeyboardButton[][]{
                {new InlineKeyboardButton("–ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç\uD83D\uDC68\u200D\uD83D\uDCBB").callbackData("prog_job")},
                {new InlineKeyboardButton("–ì—Ä–∞–±–∏—Ç–µ–ª—å\uD83E\uDD77").callbackData("crim_job")},
                {new InlineKeyboardButton("–ö–∞—Å—Å–∏—Ä\uD83D\uDCB5").callbackData("cash_job")}
        });
    }

    public InlineKeyboardMarkup robberyImprovement() {
        return new InlineKeyboardMarkup(new InlineKeyboardButton[][]{
                {new InlineKeyboardButton("\uD83E\uDD7E–£–¥–æ–±–Ω—ã–µ –±–æ—Ç–∏–Ω–æ—á–∫–∏").callbackData("big_job_boots")},
                {new InlineKeyboardButton("\uD83D\uDE97–ë—ã—Å—Ç—Ä–∞—è –º–∞—à–∏–Ω–∞").callbackData("big_job_car")},
                {new InlineKeyboardButton("üí∞–ú–µ—à–æ–∫ –¥–ª—è –¥–µ–Ω–µ–≥").callbackData("big_job_bag")},
                {new InlineKeyboardButton("\uD83D\uDC4C\uD83C\uDFFB–ù–∏—á–µ–≥–æ").callbackData("big_job_nothing")}
        });
    }

    public InlineKeyboardMarkup cashReportImprovement() {
        return new InlineKeyboardMarkup(new InlineKeyboardButton[][]{
                {new InlineKeyboardButton("‚òï–ë–∞–Ω–∫–∞ –∫–æ—Ñ–µ").callbackData("big_job_coffee")},
                {new InlineKeyboardButton("\uD83D\uDDA8–ü—Ä–∏–Ω—Ç–µ—Ä").callbackData("big_job_printer")},
                {new InlineKeyboardButton("üí∞–ú–µ—à–æ–∫ –¥–ª—è –¥–µ–Ω–µ–≥").callbackData("big_job_bag")},
                {new InlineKeyboardButton("\uD83D\uDC4C\uD83C\uDFFB–ù–∏—á–µ–≥–æ").callbackData("big_job_nothing")}
        });
    }

    public InlineKeyboardMarkup bigItProject() {
        return new InlineKeyboardMarkup(new InlineKeyboardButton[][]{
                {new InlineKeyboardButton("‚òï–ë–∞–Ω–∫–∞ –∫–æ—Ñ–µ").callbackData("big_job_coffee")},
                {new InlineKeyboardButton("\uD83D\uDCDA–ö—É—Ä—Å—ã –ø–æ –ø—Ä–æ–≥—Ä–∞–º–º–∏—Ä–æ–≤–∞–Ω–∏—é").callbackData("big_job_courses")},
                {new InlineKeyboardButton("üí∞–ú–µ—à–æ–∫ –¥–ª—è –¥–µ–Ω–µ–≥").callbackData("big_job_bag")},
                {new InlineKeyboardButton("\uD83D\uDC4C\uD83C\uDFFB–ù–∏—á–µ–≥–æ").callbackData("big_job_nothing")}
        });
    }

    public InlineKeyboardMarkup bigJobKeyboard() {
        return new InlineKeyboardMarkup(
                new InlineKeyboardButton("–ë–æ–ª—å—à–æ–µ –¥–µ–ª–æ").callbackData("big_job")
        );
    }

    public InlineKeyboardMarkup feedKeyboard() {
        return new InlineKeyboardMarkup(new InlineKeyboardButton[][]{
                {new InlineKeyboardButton("–ü–æ–∫–æ—Ä–º–∏—Ç—å –∫–∞–ø–∏–±–∞—Ä—É").callbackData("feed")},
                {new InlineKeyboardButton("–û—Ç–∫–æ—Ä–º–∏—Ç—å –∫–∞–ø–∏–±–∞—Ä—É").callbackData("fatten")}
        });
    }
}
